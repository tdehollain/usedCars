{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "GetVehicleTimingLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-getVehicleTiming"
      }
    },
    "AddVehicleLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-addVehicle"
      }
    },
    "GetVehicleListLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-getVehicleList"
      }
    },
    "DeleteVehicleLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-deleteVehicle"
      }
    },
    "LoadExistingVehiclesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-loadExistingVehicles"
      }
    },
    "DeleteAllVehiclesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-deleteAllVehicles"
      }
    },
    "AddVehicleRecordLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-addVehicleRecord"
      }
    },
    "GetVehicleRecordsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-getVehicleRecords"
      }
    },
    "DeleteVehicleRecordLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/usedCars-service-dev-deleteVehicleRecord"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "usedCars-service",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/usedCars-service-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/usedCars-service-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "VehicleListTable",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem"
                  ],
                  "Resource": "arn:aws:dynamodb:eu-west-1:072129581133:table/usedCars-vehicle-records-dev"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "usedCars-service",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GetVehicleTimingLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "getVehicleTiming.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-getVehicleTiming",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetVehicleTimingLogGroup"
      ]
    },
    "AddVehicleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "addVehicle.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-addVehicle",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AddVehicleLogGroup"
      ]
    },
    "GetVehicleListLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "getVehicleList.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-getVehicleList",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetVehicleListLogGroup"
      ]
    },
    "DeleteVehicleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "deleteVehicle.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-deleteVehicle",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DeleteVehicleLogGroup"
      ]
    },
    "LoadExistingVehiclesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "loadExistingVehicles.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-loadExistingVehicles",
        "MemorySize": 1024,
        "Timeout": 180,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LoadExistingVehiclesLogGroup"
      ]
    },
    "DeleteAllVehiclesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "deleteAllVehicles.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-deleteAllVehicles",
        "MemorySize": 1024,
        "Timeout": 180,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DeleteAllVehiclesLogGroup"
      ]
    },
    "AddVehicleRecordLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "addVehicleRecord.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-addVehicleRecord",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AddVehicleRecordLogGroup"
      ]
    },
    "GetVehicleRecordsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "getVehicleRecords.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-getVehicleRecords",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetVehicleRecordsLogGroup"
      ]
    },
    "DeleteVehicleRecordLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/usedCars-service/dev/1730535900932-2024-11-02T08:25:00.932Z/usedCars-service.zip"
        },
        "Handler": "deleteVehicleRecord.handler",
        "Runtime": "nodejs10.x",
        "FunctionName": "usedCars-service-dev-deleteVehicleRecord",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "VEHICLE_LIST_TABLE": "usedCars-vehicle-list-dev",
            "VEHICLE_RECORDS_TABLE": "usedCars-vehicle-records-dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DeleteVehicleRecordLogGroup"
      ]
    },
    "GetVehicleTimingLambdaVersionJPrClFmYk6lDOeZWGM6bzOKKIaRTphZDUef1H8oM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetVehicleTimingLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "AddVehicleLambdaVersionxfgmRSHZSAAZgybcgXH51yD5K4AerPTByeSsSFgWgU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddVehicleLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "GetVehicleListLambdaVersioniivov5OGY7QH2mjWeWaKr0iuWtnbKjeALXEvAwSv8qI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetVehicleListLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "DeleteVehicleLambdaVersion87EWttK61p9tCHTEbxhMJTjefM8Y8MhPXzMoDZIBvs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteVehicleLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "LoadExistingVehiclesLambdaVersionhbvUlBlrwlI1oZTtwfgFwoLGnpSkDgI39yNnF7Q": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LoadExistingVehiclesLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "DeleteAllVehiclesLambdaVersionltMA5C2Ras66h4e2stmdV3Us1GOl3iGjj2Ah7v7Ebc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteAllVehiclesLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "AddVehicleRecordLambdaVersionWIe5lHUM0SxCEcoa8UOo7031XhrbkGKf640QKt3phkc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddVehicleRecordLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "GetVehicleRecordsLambdaVersionK5WwjmxGeLjgSQ94noVGAqENsQqXTiBUnkHeW2FvG3g": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetVehicleRecordsLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "DeleteVehicleRecordLambdaVersionCrXxKpdRIforz2GtbwrSlwI0LxZLifpxKUwH8g6WGzk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteVehicleRecordLambdaFunction"
        },
        "CodeSha256": "ndl9Rgi3V3UPAltdlXGsopZxhTS1/5fTdvUg5Exgs6o="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-usedCars-service",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceVehiclelist": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "vehiclelist",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceVehiclerecord": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "vehiclerecord",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodVehiclelistOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,PUT'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehiclelist"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodVehiclerecordOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,PUT'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehiclerecord"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodVehiclelistPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehiclelist"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddVehicleLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddVehicleLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehiclelistGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehiclelist"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetVehicleListLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetVehicleListLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehiclelistDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehiclelist"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteVehicleLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteVehicleLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehiclerecordPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehiclerecord"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddVehicleRecordLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddVehicleRecordLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehiclerecordGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehiclerecord"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetVehicleRecordsLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetVehicleRecordsLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodVehiclerecordDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceVehiclerecord"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteVehicleRecordLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteVehicleRecordLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1730535899952": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodVehiclelistOptions",
        "ApiGatewayMethodVehiclerecordOptions",
        "ApiGatewayMethodVehiclelistPut",
        "ApiGatewayMethodVehiclelistGet",
        "ApiGatewayMethodVehiclelistDelete",
        "ApiGatewayMethodVehiclerecordPut",
        "ApiGatewayMethodVehiclerecordGet",
        "ApiGatewayMethodVehiclerecordDelete"
      ]
    },
    "AddVehicleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddVehicleLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetVehicleListLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetVehicleListLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteVehicleLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteVehicleLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddVehicleRecordLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddVehicleRecordLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetVehicleRecordsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetVehicleRecordsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteVehicleRecordLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteVehicleRecordLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "VehicleListTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "title",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "title",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "usedCars-vehicle-list-dev"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-ServerlessDeploymentBucketName"
      }
    },
    "GetVehicleTimingLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetVehicleTimingLambdaVersionJPrClFmYk6lDOeZWGM6bzOKKIaRTphZDUef1H8oM"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-GetVehicleTimingLambdaFunctionQualifiedArn"
      }
    },
    "AddVehicleLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddVehicleLambdaVersionxfgmRSHZSAAZgybcgXH51yD5K4AerPTByeSsSFgWgU"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-AddVehicleLambdaFunctionQualifiedArn"
      }
    },
    "GetVehicleListLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetVehicleListLambdaVersioniivov5OGY7QH2mjWeWaKr0iuWtnbKjeALXEvAwSv8qI"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-GetVehicleListLambdaFunctionQualifiedArn"
      }
    },
    "DeleteVehicleLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteVehicleLambdaVersion87EWttK61p9tCHTEbxhMJTjefM8Y8MhPXzMoDZIBvs"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-DeleteVehicleLambdaFunctionQualifiedArn"
      }
    },
    "LoadExistingVehiclesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LoadExistingVehiclesLambdaVersionhbvUlBlrwlI1oZTtwfgFwoLGnpSkDgI39yNnF7Q"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-LoadExistingVehiclesLambdaFunctionQualifiedArn"
      }
    },
    "DeleteAllVehiclesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteAllVehiclesLambdaVersionltMA5C2Ras66h4e2stmdV3Us1GOl3iGjj2Ah7v7Ebc"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-DeleteAllVehiclesLambdaFunctionQualifiedArn"
      }
    },
    "AddVehicleRecordLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddVehicleRecordLambdaVersionWIe5lHUM0SxCEcoa8UOo7031XhrbkGKf640QKt3phkc"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-AddVehicleRecordLambdaFunctionQualifiedArn"
      }
    },
    "GetVehicleRecordsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetVehicleRecordsLambdaVersionK5WwjmxGeLjgSQ94noVGAqENsQqXTiBUnkHeW2FvG3g"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-GetVehicleRecordsLambdaFunctionQualifiedArn"
      }
    },
    "DeleteVehicleRecordLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteVehicleRecordLambdaVersionCrXxKpdRIforz2GtbwrSlwI0LxZLifpxKUwH8g6WGzk"
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-DeleteVehicleRecordLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-usedCars-service-dev-ServiceEndpoint"
      }
    }
  }
}